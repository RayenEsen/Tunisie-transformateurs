using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WebAPI.Model
{
    public class Transformateur
    {
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.None)] // Specify that Numero is not auto-generated by the database
        public int Numero { get; set; }

        [Column(TypeName = "nvarchar(100)")]
        public string Marque { get; set; } = "";

        [Column(TypeName = "nvarchar(100)")]
        public string Client { get; set; } = "";

        [Column(TypeName = "nvarchar(100)")]
        public string Norme { get; set; } = "";

        [Column(TypeName = "nvarchar(100)")]
        public string Power { get; set; } = "";

        public float Mtu1 { get; set; }
        public float Mtu2 { get; set; }
        public float Btu2 { get; set; }
        public float Bti2 { get; set; }
        public int Nbphase { get; set; }

        [Column(TypeName = "nvarchar(100)")]
        public string Prises { get; set; } = "";

        [Column(TypeName = "nvarchar(100)")]
        public string Couplage { get; set; } = "";

        [Column(TypeName = "nvarchar(100)")]
        public string Cooling { get; set; } = "";

        public float Frequency { get; set; }

        // Parameterless constructor for Entity Framework
        protected Transformateur()
        {
        }

        // Constructor for creating instances with required parameters
        public Transformateur(int numero, string marque, string client, string norme, string power,
                              float mtU1, float mtU2, float btU2, float btI2, int nbPhase,
                              string prises, string couplage, string cooling, float frequency)
        {
            Numero = numero;
            Marque = marque;
            Client = client;
            Norme = norme;
            Power = power;
            MT_U1 = mtU1;
            MT_U2 = mtU2;
            BT_U2 = btU2;
            BT_I2 = btI2;
            Nb_phase = nbPhase;
            Prises = prises;
            Couplage = couplage;
            Cooling = cooling;
            Frequency = frequency;
        }
    }
}
